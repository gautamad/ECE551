|Barcode_test
clk => clk.IN4
RST_n => RST_n.IN1
next_byte => next_byte.IN1
LEDs[0] <= barcode:BCR1.ID
LEDs[1] <= barcode:BCR1.ID
LEDs[2] <= barcode:BCR1.ID
LEDs[3] <= barcode:BCR1.ID
LEDs[4] <= barcode:BCR1.ID
LEDs[5] <= barcode:BCR1.ID
LEDs[6] <= barcode:BCR1.ID
LEDs[7] <= barcode:BCR1.ID


|Barcode_test|reset_synch:iRST
RST_n => rst_n~reg0.ALOAD
RST_n => q0.ACLR
clk => rst_n~reg0.CLK
clk => q0.CLK
rst_n <= rst_n~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Barcode_test|button_smpl:iButton_smpl
clk => q2.CLK
clk => q1.CLK
clk => q0.CLK
preset_n => q2.PRESET
preset_n => q1.PRESET
preset_n => q0.PRESET
next_byte => q0.DATAIN
button_rise_edge <= button_rise_edge.DB_MAX_OUTPUT_PORT_TYPE


|Barcode_test|barcode:BCR1
clk => glitch_timer[0].CLK
clk => glitch_timer[1].CLK
clk => glitch_timer[2].CLK
clk => glitch_timer[3].CLK
clk => glitch_timer[4].CLK
clk => glitch_timer[5].CLK
clk => glitch_timer[6].CLK
clk => glitch_timer[7].CLK
clk => glitch_timer[8].CLK
clk => glitch_timer[9].CLK
clk => glitch_timer[10].CLK
clk => glitch_timer[11].CLK
clk => glitch_timer[12].CLK
clk => glitch_timer[13].CLK
clk => glitch_timer[14].CLK
clk => glitch_timer[15].CLK
clk => glitch_timer[16].CLK
clk => glitch_timer[17].CLK
clk => glitch_timer[18].CLK
clk => glitch_timer[19].CLK
clk => glitch_timer[20].CLK
clk => glitch_timer[21].CLK
clk => glitch_timer[22].CLK
clk => start_counter[0].CLK
clk => start_counter[1].CLK
clk => start_counter[2].CLK
clk => start_counter[3].CLK
clk => start_counter[4].CLK
clk => start_counter[5].CLK
clk => start_counter[6].CLK
clk => start_counter[7].CLK
clk => start_counter[8].CLK
clk => start_counter[9].CLK
clk => start_counter[10].CLK
clk => start_counter[11].CLK
clk => start_counter[12].CLK
clk => start_counter[13].CLK
clk => start_counter[14].CLK
clk => start_counter[15].CLK
clk => start_counter[16].CLK
clk => start_counter[17].CLK
clk => start_counter[18].CLK
clk => start_counter[19].CLK
clk => start_counter[20].CLK
clk => start_counter[21].CLK
clk => ID_shft_reg[0].CLK
clk => ID_shft_reg[1].CLK
clk => ID_shft_reg[2].CLK
clk => ID_shft_reg[3].CLK
clk => ID_shft_reg[4].CLK
clk => ID_shft_reg[5].CLK
clk => ID_shft_reg[6].CLK
clk => ID_shft_reg[7].CLK
clk => baud_cnt[0].CLK
clk => baud_cnt[1].CLK
clk => baud_cnt[2].CLK
clk => baud_cnt[3].CLK
clk => baud_cnt[4].CLK
clk => baud_cnt[5].CLK
clk => baud_cnt[6].CLK
clk => baud_cnt[7].CLK
clk => baud_cnt[8].CLK
clk => baud_cnt[9].CLK
clk => baud_cnt[10].CLK
clk => baud_cnt[11].CLK
clk => baud_cnt[12].CLK
clk => baud_cnt[13].CLK
clk => baud_cnt[14].CLK
clk => baud_cnt[15].CLK
clk => baud_cnt[16].CLK
clk => baud_cnt[17].CLK
clk => baud_cnt[18].CLK
clk => baud_cnt[19].CLK
clk => baud_cnt[20].CLK
clk => baud_cnt[21].CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => BC_floped.CLK
clk => bc_4.CLK
clk => bc_3.CLK
clk => bc_2.CLK
clk => bc_1.CLK
clk => state~1.DATAIN
rst_n => glitch_timer[0].ACLR
rst_n => glitch_timer[1].ACLR
rst_n => glitch_timer[2].ACLR
rst_n => glitch_timer[3].ACLR
rst_n => glitch_timer[4].ACLR
rst_n => glitch_timer[5].ACLR
rst_n => glitch_timer[6].ACLR
rst_n => glitch_timer[7].ACLR
rst_n => glitch_timer[8].ACLR
rst_n => glitch_timer[9].ACLR
rst_n => glitch_timer[10].ACLR
rst_n => glitch_timer[11].ACLR
rst_n => glitch_timer[12].ACLR
rst_n => glitch_timer[13].ACLR
rst_n => glitch_timer[14].ACLR
rst_n => glitch_timer[15].ACLR
rst_n => glitch_timer[16].ACLR
rst_n => glitch_timer[17].ACLR
rst_n => glitch_timer[18].ACLR
rst_n => glitch_timer[19].ACLR
rst_n => glitch_timer[20].ACLR
rst_n => glitch_timer[21].ACLR
rst_n => glitch_timer[22].ACLR
rst_n => start_counter[0].ACLR
rst_n => start_counter[1].ACLR
rst_n => start_counter[2].ACLR
rst_n => start_counter[3].ACLR
rst_n => start_counter[4].ACLR
rst_n => start_counter[5].ACLR
rst_n => start_counter[6].ACLR
rst_n => start_counter[7].ACLR
rst_n => start_counter[8].ACLR
rst_n => start_counter[9].ACLR
rst_n => start_counter[10].ACLR
rst_n => start_counter[11].ACLR
rst_n => start_counter[12].ACLR
rst_n => start_counter[13].ACLR
rst_n => start_counter[14].ACLR
rst_n => start_counter[15].ACLR
rst_n => start_counter[16].ACLR
rst_n => start_counter[17].ACLR
rst_n => start_counter[18].ACLR
rst_n => start_counter[19].ACLR
rst_n => start_counter[20].ACLR
rst_n => start_counter[21].ACLR
rst_n => ID_shft_reg[0].ACLR
rst_n => ID_shft_reg[1].ACLR
rst_n => ID_shft_reg[2].ACLR
rst_n => ID_shft_reg[3].ACLR
rst_n => ID_shft_reg[4].ACLR
rst_n => ID_shft_reg[5].ACLR
rst_n => ID_shft_reg[6].ACLR
rst_n => ID_shft_reg[7].ACLR
rst_n => baud_cnt[0].ACLR
rst_n => baud_cnt[1].ACLR
rst_n => baud_cnt[2].ACLR
rst_n => baud_cnt[3].ACLR
rst_n => baud_cnt[4].ACLR
rst_n => baud_cnt[5].ACLR
rst_n => baud_cnt[6].ACLR
rst_n => baud_cnt[7].ACLR
rst_n => baud_cnt[8].ACLR
rst_n => baud_cnt[9].ACLR
rst_n => baud_cnt[10].ACLR
rst_n => baud_cnt[11].ACLR
rst_n => baud_cnt[12].ACLR
rst_n => baud_cnt[13].ACLR
rst_n => baud_cnt[14].ACLR
rst_n => baud_cnt[15].ACLR
rst_n => baud_cnt[16].ACLR
rst_n => baud_cnt[17].ACLR
rst_n => baud_cnt[18].ACLR
rst_n => baud_cnt[19].ACLR
rst_n => baud_cnt[20].ACLR
rst_n => baud_cnt[21].ACLR
rst_n => bit_cnt[0].ACLR
rst_n => bit_cnt[1].ACLR
rst_n => bit_cnt[2].ACLR
rst_n => bit_cnt[3].ACLR
rst_n => BC_floped.PRESET
rst_n => bc_4.PRESET
rst_n => bc_3.PRESET
rst_n => bc_2.PRESET
rst_n => bc_1.PRESET
rst_n => state~3.DATAIN
BC => bc_1.DATAIN
ID_vld <= ID_vld.DB_MAX_OUTPUT_PORT_TYPE
ID[0] <= ID_shft_reg[0].DB_MAX_OUTPUT_PORT_TYPE
ID[1] <= ID_shft_reg[1].DB_MAX_OUTPUT_PORT_TYPE
ID[2] <= ID_shft_reg[2].DB_MAX_OUTPUT_PORT_TYPE
ID[3] <= ID_shft_reg[3].DB_MAX_OUTPUT_PORT_TYPE
ID[4] <= ID_shft_reg[4].DB_MAX_OUTPUT_PORT_TYPE
ID[5] <= ID_shft_reg[5].DB_MAX_OUTPUT_PORT_TYPE
ID[6] <= ID_shft_reg[6].DB_MAX_OUTPUT_PORT_TYPE
ID[7] <= ID_shft_reg[7].DB_MAX_OUTPUT_PORT_TYPE
clr_ID_vld => ID_done.OUTPUTSELECT
clr_ID_vld => ID_done.OUTPUTSELECT
clr_ID_vld => next_state.OUTPUTSELECT
clr_ID_vld => Selector0.IN4
clr_ID_vld => Selector8.IN3


|Barcode_test|barcode_mimic:BCM1
clk => BC~reg0.CLK
clk => BC_done~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => period_cnt[0].CLK
clk => period_cnt[1].CLK
clk => period_cnt[2].CLK
clk => period_cnt[3].CLK
clk => period_cnt[4].CLK
clk => period_cnt[5].CLK
clk => period_cnt[6].CLK
clk => period_cnt[7].CLK
clk => period_cnt[8].CLK
clk => period_cnt[9].CLK
clk => period_cnt[10].CLK
clk => period_cnt[11].CLK
clk => period_cnt[12].CLK
clk => period_cnt[13].CLK
clk => period_cnt[14].CLK
clk => period_cnt[15].CLK
clk => period_cnt[16].CLK
clk => period_cnt[17].CLK
clk => period_cnt[18].CLK
clk => period_cnt[19].CLK
clk => period_cnt[20].CLK
clk => period_cnt[21].CLK
clk => shft_reg[0].CLK
clk => shft_reg[1].CLK
clk => shft_reg[2].CLK
clk => shft_reg[3].CLK
clk => shft_reg[4].CLK
clk => shft_reg[5].CLK
clk => shft_reg[6].CLK
clk => shft_reg[7].CLK
clk => state~1.DATAIN
rst_n => period_cnt[0].ACLR
rst_n => period_cnt[1].ACLR
rst_n => period_cnt[2].ACLR
rst_n => period_cnt[3].ACLR
rst_n => period_cnt[4].ACLR
rst_n => period_cnt[5].ACLR
rst_n => period_cnt[6].ACLR
rst_n => period_cnt[7].ACLR
rst_n => period_cnt[8].ACLR
rst_n => period_cnt[9].ACLR
rst_n => period_cnt[10].ACLR
rst_n => period_cnt[11].ACLR
rst_n => period_cnt[12].ACLR
rst_n => period_cnt[13].ACLR
rst_n => period_cnt[14].ACLR
rst_n => period_cnt[15].ACLR
rst_n => period_cnt[16].ACLR
rst_n => period_cnt[17].ACLR
rst_n => period_cnt[18].ACLR
rst_n => period_cnt[19].ACLR
rst_n => period_cnt[20].ACLR
rst_n => period_cnt[21].ACLR
rst_n => BC_done~reg0.ACLR
rst_n => BC~reg0.PRESET
rst_n => preturb_mag[0].ACLR
rst_n => preturb_mag[1].ACLR
rst_n => preturb_mag[2].ACLR
rst_n => preturb_mag[3].ACLR
rst_n => preturb_mag[4].ACLR
rst_n => preturb_mag[5].ACLR
rst_n => preturb_mag[6].ACLR
rst_n => preturb_mag[7].ACLR
rst_n => preturb_mag[8].ACLR
rst_n => preturb_mag[9].ACLR
rst_n => preturb_mag[10].ACLR
rst_n => preturb_mag[11].ACLR
rst_n => preturb_mag[12].ACLR
rst_n => preturb_mag[13].ACLR
rst_n => preturb_mag[14].ACLR
rst_n => preturb_mag[15].ACLR
rst_n => preturb_mag[16].ACLR
rst_n => state~3.DATAIN
period[0] => Add1.IN27
period[0] => Add2.IN44
period[1] => Add1.IN26
period[1] => Add2.IN43
period[2] => Add1.IN25
period[2] => Add2.IN42
period[3] => Add1.IN24
period[3] => Add2.IN41
period[4] => Add1.IN23
period[4] => Add2.IN40
period[5] => Mod0.IN32
period[5] => Add1.IN22
period[5] => Add2.IN39
period[6] => Mod0.IN31
period[6] => Add1.IN21
period[6] => Add2.IN38
period[7] => Mod0.IN30
period[7] => Add1.IN20
period[7] => Add2.IN37
period[8] => Mod0.IN29
period[8] => Add1.IN19
period[8] => Add2.IN36
period[9] => Mod0.IN28
period[9] => Add1.IN18
period[9] => Add2.IN35
period[10] => Mod0.IN27
period[10] => Add1.IN17
period[10] => Add2.IN34
period[11] => Mod0.IN26
period[11] => Add1.IN16
period[11] => Add2.IN33
period[12] => Mod0.IN25
period[12] => Add1.IN15
period[12] => Add2.IN32
period[13] => Mod0.IN24
period[13] => Add1.IN14
period[13] => Add2.IN31
period[14] => Mod0.IN23
period[14] => Add1.IN13
period[14] => Add2.IN30
period[15] => Mod0.IN22
period[15] => Add1.IN12
period[15] => Add2.IN29
period[16] => Mod0.IN21
period[16] => Add1.IN11
period[16] => Add2.IN28
period[17] => Mod0.IN20
period[17] => Add1.IN10
period[17] => Add2.IN27
period[18] => Mod0.IN19
period[18] => Add1.IN9
period[18] => Add2.IN26
period[19] => Mod0.IN18
period[19] => Add1.IN8
period[19] => Add2.IN25
period[20] => Mod0.IN17
period[20] => Add1.IN7
period[20] => Add2.IN24
period[21] => Mod0.IN16
period[21] => Add1.IN6
period[21] => Add2.IN23
send => shft_reg.OUTPUTSELECT
send => shft_reg.OUTPUTSELECT
send => shft_reg.OUTPUTSELECT
send => shft_reg.OUTPUTSELECT
send => shft_reg.OUTPUTSELECT
send => shft_reg.OUTPUTSELECT
send => shft_reg.OUTPUTSELECT
send => shft_reg.OUTPUTSELECT
send => bit_cnt.OUTPUTSELECT
send => bit_cnt.OUTPUTSELECT
send => bit_cnt.OUTPUTSELECT
send => bit_cnt.OUTPUTSELECT
send => BC_done.OUTPUTSELECT
send => Selector1.IN3
send => Selector4.IN3
send => Selector0.IN1
station_ID[0] => shft_reg.DATAB
station_ID[1] => shft_reg.DATAB
station_ID[2] => shft_reg.DATAB
station_ID[3] => shft_reg.DATAB
station_ID[4] => shft_reg.DATAB
station_ID[5] => shft_reg.DATAB
station_ID[6] => shft_reg.DATAB
station_ID[7] => shft_reg.DATAB
BC_done <= BC_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
BC <= BC~reg0.DB_MAX_OUTPUT_PORT_TYPE


